// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic usage has parent key 1`] = `
OrderedMap {
  "_list": Array [
    Object {
      "key": "plugin-a-1",
      "name": "plugin-a",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-b-1",
      "name": "plugin-b",
      "parent": "plugin-a-1",
      "type": "block",
    },
    Object {
      "key": "plugin-c-1",
      "name": "plugin-c",
      "parent": "plugin-a-1",
      "type": "block",
    },
  ],
  "_map": Map {
    "plugin-a-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [
        "plugin-b-1",
        "plugin-c-1",
      ],
      "key": "plugin-a-1",
      "name": "plugin-a",
      "nextSibling": null,
      "parent": null,
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-b-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-b-1",
      "name": "plugin-b",
      "nextSibling": "plugin-c-1",
      "parent": "plugin-a-1",
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-c-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-c-1",
      "name": "plugin-c",
      "nextSibling": null,
      "parent": "plugin-a-1",
      "prevSibling": "plugin-b-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
  },
  "_nullParentKeys": Array [
    "plugin-a-1",
  ],
}
`;

exports[`basic usage has slot key 1`] = `
OrderedMap {
  "_list": Array [
    Object {
      "key": "plugin-a-1",
      "name": "plugin-a",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-b-1",
      "name": "plugin-b",
      "parent": "plugin-a-1.slot.header",
      "type": "block",
    },
    Object {
      "key": "plugin-c-1",
      "name": "plugin-c",
      "parent": "plugin-a-1.slot.header",
      "type": "block",
    },
  ],
  "_map": Map {
    "plugin-a-1" => Record {
      "_map": [Circular],
      "_slot": Object {
        "header": Array [
          "plugin-b-1",
          "plugin-c-1",
        ],
      },
      "children": Array [],
      "key": "plugin-a-1",
      "name": "plugin-a",
      "nextSibling": null,
      "parent": null,
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-b-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-b-1",
      "name": "plugin-b",
      "nextSibling": "plugin-c-1",
      "parent": "plugin-a-1.slot.header",
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-c-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-c-1",
      "name": "plugin-c",
      "nextSibling": null,
      "parent": "plugin-a-1.slot.header",
      "prevSibling": "plugin-b-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
  },
  "_nullParentKeys": Array [
    "plugin-a-1",
  ],
}
`;

exports[`basic usage has slot with different key 1`] = `
OrderedMap {
  "_list": Array [
    Object {
      "key": "plugin-a-1",
      "name": "plugin-a",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-b-1",
      "name": "plugin-b",
      "parent": "plugin-a-1.slot.header",
      "type": "block",
    },
    Object {
      "key": "plugin-c-1",
      "name": "plugin-c",
      "parent": "plugin-a-1.slot.content",
      "type": "block",
    },
  ],
  "_map": Map {
    "plugin-a-1" => Record {
      "_map": [Circular],
      "_slot": Object {
        "content": Array [
          "plugin-c-1",
        ],
        "header": Array [
          "plugin-b-1",
        ],
      },
      "children": Array [],
      "key": "plugin-a-1",
      "name": "plugin-a",
      "nextSibling": null,
      "parent": null,
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-b-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-b-1",
      "name": "plugin-b",
      "nextSibling": null,
      "parent": "plugin-a-1.slot.header",
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-c-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-c-1",
      "name": "plugin-c",
      "nextSibling": null,
      "parent": "plugin-a-1.slot.content",
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
  },
  "_nullParentKeys": Array [
    "plugin-a-1",
  ],
}
`;

exports[`basic usage multiple header and has slot with different key 1`] = `
OrderedMap {
  "_list": Array [
    Object {
      "key": "plugin-a-1",
      "name": "plugin-a",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-b-1",
      "name": "plugin-b",
      "parent": "plugin-a-1.slot.header",
      "type": "block",
    },
    Object {
      "key": "plugin-c-1",
      "name": "plugin-c",
      "parent": "plugin-a-1.slot.content",
      "type": "block",
    },
    Object {
      "key": "plugin-d-1",
      "name": "plugin-c",
      "parent": null,
      "type": "block",
    },
  ],
  "_map": Map {
    "plugin-a-1" => Record {
      "_map": [Circular],
      "_slot": Object {
        "content": Array [
          "plugin-c-1",
        ],
        "header": Array [
          "plugin-b-1",
        ],
      },
      "children": Array [],
      "key": "plugin-a-1",
      "name": "plugin-a",
      "nextSibling": "plugin-d-1",
      "parent": null,
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-b-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-b-1",
      "name": "plugin-b",
      "nextSibling": null,
      "parent": "plugin-a-1.slot.header",
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-c-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-c-1",
      "name": "plugin-c",
      "nextSibling": null,
      "parent": "plugin-a-1.slot.content",
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-d-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-d-1",
      "name": "plugin-c",
      "nextSibling": null,
      "parent": null,
      "prevSibling": "plugin-a-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
  },
  "_nullParentKeys": Array [
    "plugin-a-1",
    "plugin-d-1",
  ],
}
`;

exports[`basic usage multiple header and has slot with different key 2`] = `
OrderedMap {
  "_list": Array [
    Object {
      "key": "plugin-a-1",
      "name": "plugin-a",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-b-1",
      "name": "plugin-b",
      "parent": "plugin-a-1.slot.header",
      "type": "block",
    },
    Object {
      "key": "plugin-c-1",
      "name": "plugin-c",
      "parent": "plugin-a-1.slot.content",
      "type": "block",
    },
    Object {
      "key": "plugin-d-1",
      "name": "plugin-c",
      "parent": null,
      "type": "block",
    },
  ],
  "_map": Map {
    "plugin-a-1" => Record {
      "_map": [Circular],
      "_slot": Object {
        "content": Array [
          "plugin-c-1",
        ],
        "header": Array [
          "plugin-b-1",
        ],
      },
      "children": Array [],
      "key": "plugin-a-1",
      "name": "plugin-a",
      "nextSibling": "plugin-d-1",
      "parent": null,
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-b-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-b-1",
      "name": "plugin-b",
      "nextSibling": null,
      "parent": "plugin-a-1.slot.header",
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-c-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-c-1",
      "name": "plugin-c",
      "nextSibling": null,
      "parent": "plugin-a-1.slot.content",
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-d-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-d-1",
      "name": "plugin-c",
      "nextSibling": null,
      "parent": null,
      "prevSibling": "plugin-a-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
  },
  "_nullParentKeys": Array [
    "plugin-a-1",
    "plugin-d-1",
  ],
}
`;

exports[`basic usage parent is null 1`] = `
OrderedMap {
  "_list": Array [
    Object {
      "key": "plugin-a-1",
      "name": "plugin-a",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-b-1",
      "name": "plugin-b",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-c-1",
      "name": "plugin-c",
      "parent": null,
      "type": "block",
    },
  ],
  "_map": Map {
    "plugin-a-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-a-1",
      "name": "plugin-a",
      "nextSibling": "plugin-b-1",
      "parent": null,
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-b-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-b-1",
      "name": "plugin-b",
      "nextSibling": "plugin-c-1",
      "parent": null,
      "prevSibling": "plugin-a-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-c-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-c-1",
      "name": "plugin-c",
      "nextSibling": null,
      "parent": null,
      "prevSibling": "plugin-b-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
  },
  "_nullParentKeys": Array [
    "plugin-a-1",
    "plugin-b-1",
    "plugin-c-1",
  ],
}
`;

exports[`insert InsertAfter: has parent key 1`] = `
OrderedMap {
  "_list": Array [
    Object {
      "key": "plugin-a-1",
      "name": "plugin-a",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-b-1",
      "name": "plugin-b",
      "parent": "plugin-a-1",
      "type": "block",
    },
    Object {
      "key": "plugin-c-1",
      "name": "plugin-c",
      "parent": "plugin-a-1",
      "type": "block",
    },
  ],
  "_map": Map {
    "plugin-a-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [
        "plugin-b-1",
        "plugin-c-1",
        "plugin-d-1",
        "plugin-f-1",
      ],
      "key": "plugin-a-1",
      "name": "plugin-a",
      "nextSibling": null,
      "parent": null,
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-b-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-b-1",
      "name": "plugin-b",
      "nextSibling": "plugin-c-1",
      "parent": "plugin-a-1",
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-c-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-c-1",
      "name": "plugin-c",
      "nextSibling": "plugin-d-1",
      "parent": "plugin-a-1",
      "prevSibling": "plugin-b-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-f-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-f-1",
      "name": "plugin-b",
      "nextSibling": null,
      "parent": "plugin-a-1",
      "prevSibling": "plugin-d-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-d-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-d-1",
      "name": "plugin-b",
      "nextSibling": "plugin-f-1",
      "parent": "plugin-a-1",
      "prevSibling": "plugin-c-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
  },
  "_nullParentKeys": Array [
    "plugin-a-1",
  ],
}
`;

exports[`insert InsertBefore: has parent key 1`] = `
OrderedMap {
  "_list": Array [
    Object {
      "key": "plugin-a-1",
      "name": "plugin-a",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-b-1",
      "name": "plugin-b",
      "parent": "plugin-a-1",
      "type": "block",
    },
    Object {
      "key": "plugin-c-1",
      "name": "plugin-c",
      "parent": "plugin-a-1",
      "type": "block",
    },
  ],
  "_map": Map {
    "plugin-a-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [
        "plugin-d-1",
        "plugin-f-1",
        "plugin-b-1",
        "plugin-c-1",
      ],
      "key": "plugin-a-1",
      "name": "plugin-a",
      "nextSibling": null,
      "parent": null,
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-b-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-b-1",
      "name": "plugin-b",
      "nextSibling": "plugin-d-1",
      "parent": "plugin-a-1",
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-c-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-c-1",
      "name": "plugin-c",
      "nextSibling": null,
      "parent": "plugin-a-1",
      "prevSibling": "plugin-f-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-d-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-d-1",
      "name": "plugin-b",
      "nextSibling": "plugin-f-1",
      "parent": "plugin-a-1",
      "prevSibling": "plugin-b-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-f-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-f-1",
      "name": "plugin-b",
      "nextSibling": "plugin-c-1",
      "parent": "plugin-a-1",
      "prevSibling": "plugin-d-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
  },
  "_nullParentKeys": Array [
    "plugin-a-1",
  ],
}
`;

exports[`insert insert a null parent 1`] = `
OrderedMap {
  "_list": Array [
    Object {
      "key": "plugin-a-1",
      "name": "plugin-a",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-b-1",
      "name": "plugin-b",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-c-1",
      "name": "plugin-c",
      "parent": null,
      "type": "block",
    },
  ],
  "_map": Map {
    "plugin-a-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-a-1",
      "name": "plugin-a",
      "nextSibling": "plugin-b-1",
      "parent": null,
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-b-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-b-1",
      "name": "plugin-b",
      "nextSibling": "plugin-d-1",
      "parent": null,
      "prevSibling": "plugin-a-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-c-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-c-1",
      "name": "plugin-c",
      "nextSibling": null,
      "parent": null,
      "prevSibling": "plugin-d-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-d-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-d-1",
      "name": "plugin-b",
      "nextSibling": "plugin-c-1",
      "parent": null,
      "prevSibling": "plugin-b-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
  },
  "_nullParentKeys": Array [
    "plugin-a-1",
    "plugin-b-1",
    "plugin-d-1",
    "plugin-c-1",
  ],
}
`;

exports[`insert insert two with null parent 1`] = `
OrderedMap {
  "_list": Array [
    Object {
      "key": "plugin-a-1",
      "name": "plugin-a",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-b-1",
      "name": "plugin-b",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-c-1",
      "name": "plugin-c",
      "parent": null,
      "type": "block",
    },
  ],
  "_map": Map {
    "plugin-a-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-a-1",
      "name": "plugin-a",
      "nextSibling": "plugin-b-1",
      "parent": null,
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-b-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-b-1",
      "name": "plugin-b",
      "nextSibling": "plugin-d-1",
      "parent": null,
      "prevSibling": "plugin-a-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-c-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-c-1",
      "name": "plugin-c",
      "nextSibling": null,
      "parent": null,
      "prevSibling": "plugin-f-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-d-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-d-1",
      "name": "plugin-b",
      "nextSibling": "plugin-f-1",
      "parent": null,
      "prevSibling": "plugin-b-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-f-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-f-1",
      "name": "plugin-b",
      "nextSibling": "plugin-c-1",
      "parent": null,
      "prevSibling": "plugin-d-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
  },
  "_nullParentKeys": Array [
    "plugin-a-1",
    "plugin-b-1",
    "plugin-d-1",
    "plugin-f-1",
    "plugin-c-1",
  ],
}
`;

exports[`insert insertAfter: has slot with different key 1`] = `
OrderedMap {
  "_list": Array [
    Object {
      "key": "plugin-a-1",
      "name": "plugin-a",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-b-1",
      "name": "plugin-b",
      "parent": "plugin-a-1.slot.header",
      "type": "block",
    },
    Object {
      "key": "plugin-c-1",
      "name": "plugin-c",
      "parent": "plugin-a-1.slot.content",
      "type": "block",
    },
  ],
  "_map": Map {
    "plugin-a-1" => Record {
      "_map": [Circular],
      "_slot": Object {
        "content": Array [
          "plugin-c-1",
          "plugin-d-1",
          "plugin-f-1",
        ],
        "header": Array [
          "plugin-b-1",
        ],
      },
      "children": Array [],
      "key": "plugin-a-1",
      "name": "plugin-a",
      "nextSibling": null,
      "parent": null,
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-b-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-b-1",
      "name": "plugin-b",
      "nextSibling": null,
      "parent": "plugin-a-1.slot.header",
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-c-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-c-1",
      "name": "plugin-c",
      "nextSibling": "plugin-d-1",
      "parent": "plugin-a-1.slot.content",
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-f-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-f-1",
      "name": "plugin-b",
      "nextSibling": null,
      "parent": "plugin-a-1.slot.content",
      "prevSibling": "plugin-d-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-d-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-d-1",
      "name": "plugin-b",
      "nextSibling": "plugin-f-1",
      "parent": "plugin-a-1.slot.content",
      "prevSibling": "plugin-c-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
  },
  "_nullParentKeys": Array [
    "plugin-a-1",
  ],
}
`;

exports[`insert insertBefore: has slot with different key 1`] = `
OrderedMap {
  "_list": Array [
    Object {
      "key": "plugin-a-1",
      "name": "plugin-a",
      "parent": null,
      "type": "block",
    },
    Object {
      "key": "plugin-b-1",
      "name": "plugin-b",
      "parent": "plugin-a-1.slot.header",
      "type": "block",
    },
    Object {
      "key": "plugin-c-1",
      "name": "plugin-c",
      "parent": "plugin-a-1.slot.content",
      "type": "block",
    },
  ],
  "_map": Map {
    "plugin-a-1" => Record {
      "_map": [Circular],
      "_slot": Object {
        "content": Array [
          "plugin-f-1",
          "plugin-d-1",
          "plugin-c-1",
        ],
        "header": Array [
          "plugin-b-1",
        ],
      },
      "children": Array [],
      "key": "plugin-a-1",
      "name": "plugin-a",
      "nextSibling": null,
      "parent": null,
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-b-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-b-1",
      "name": "plugin-b",
      "nextSibling": null,
      "parent": "plugin-a-1.slot.header",
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-c-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-c-1",
      "name": "plugin-c",
      "nextSibling": null,
      "parent": "plugin-a-1.slot.content",
      "prevSibling": "plugin-f-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-d-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-d-1",
      "name": "plugin-b",
      "nextSibling": "plugin-f-1",
      "parent": "plugin-a-1.slot.content",
      "prevSibling": null,
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
    "plugin-f-1" => Record {
      "_map": [Circular],
      "_slot": Object {},
      "children": Array [],
      "key": "plugin-f-1",
      "name": "plugin-b",
      "nextSibling": "plugin-c-1",
      "parent": "plugin-a-1.slot.content",
      "prevSibling": "plugin-d-1",
      "props": Object {},
      "strategies": Array [],
      "type": "block",
    },
  },
  "_nullParentKeys": Array [
    "plugin-a-1",
  ],
}
`;
