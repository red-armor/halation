{"version":3,"file":"halation.esm.js","sources":["../src/Node.ts","../src/types/module.ts","../src/types/loadStrategy.ts","../src/logger.ts","../src/Module.ts","../src/commons.ts","../src/BlockNode.tsx","../src/LoadManager.ts","../src/Tracker.ts","../src/path.ts","../src/EffectNode.ts","../src/EventTracker.ts","../src/Halation.ts"],"sourcesContent":["import { NodeProps, NodeRenderProps, Strategy } from './types';\n\nclass Node {\n  private name: string;\n  private key: string;\n  private prevSibling: string;\n  private nextSibling: string;\n  private type: string;\n  private children: Array<string>;\n  private strategies?: Array<Strategy>;\n\n  constructor(props: NodeProps) {\n    const {\n      key,\n      type,\n      prevSibling,\n      nextSibling,\n      children,\n      name,\n      strategies,\n    } = props;\n    this.key = key;\n    this.name = name;\n    this.prevSibling = prevSibling;\n    this.nextSibling = nextSibling;\n    this.type = type || 'block';\n    this.children = children;\n    this.strategies = strategies;\n  }\n\n  getChildKeys(): Array<string> {\n    return this.children;\n  }\n\n  getNextSibling(): string | null {\n    return this.nextSibling;\n  }\n\n  getPrevSibling(): string | null {\n    return this.prevSibling;\n  }\n\n  getName(): string {\n    return this.name;\n  }\n\n  getKey(): string {\n    return this.key;\n  }\n\n  getType(): string {\n    return this.type;\n  }\n\n  getStrategies(): Array<Strategy> | undefined {\n    return this.strategies;\n  }\n\n  getRenderProps(): NodeRenderProps {\n    return {\n      key: this.key,\n      name: this.name,\n      type: this.type,\n    };\n  }\n}\n\nexport default Node;\n","import { Strategy } from './loadStrategy';\n\nexport enum ModuleName {\n  Model = 'model',\n  Component = 'component',\n}\n\nexport type ModuleGetter = () => Function | undefined;\n\nexport interface GetComponent {\n  (): Promise<Function>;\n}\n\nexport interface ModuleProps {\n  name: string;\n  getModel?: Function;\n  getComponent: GetComponent;\n  strategies: Array<Strategy>;\n}\n\nexport enum ModuleStatus {\n  Idle,\n  Pending,\n  Loaded,\n  Error,\n}\n\nexport interface ESModule {\n  ['__esModule']: boolean;\n  default: Function;\n}\n\nexport type RawModule = ESModule | Function;\n\nexport type ResolvedModule<T extends RawModule> = T extends ESModule\n  ? T['default']\n  : T;\n","export enum StrategyType {\n  flags = 'flags',\n  event = 'event',\n  runtime = 'runtime',\n}\n\nexport interface Strategy {\n  type: StrategyType;\n  resolver: (value?: any) => boolean;\n}\n\nexport interface LoadStrategyProps {\n  strategy: Strategy;\n}\n","export const warn = (...args: Array<any>) => {\n  console.warn.call(null, ...args);\n};\n\nexport const log = (...args: Array<any>) => {\n  console.log.call(null, ...args);\n};\n\nexport const error = (props: { type: string; message: string }) => {\n  const { message, type } = props;\n  console.error(message, type);\n};\n\nexport const logActivity = (\n  moduleName: string,\n  { message, value }: { message: string; value?: any }\n) => {\n  const title: string = `[${moduleName}]`;\n  const titleStyle = 'color: #7cb305; font-weight: bold';\n  const messageStyle = 'color: #ff4d4f; font-weight: bold';\n\n  if (process && process.env.NODE_ENV !== 'production') {\n    console.log.apply(null, [\n      '%c' + title + ' %c' + message,\n      titleStyle,\n      messageStyle,\n      value ? value : '',\n      Date.now(),\n    ]);\n  }\n};\n","import {\n  ModuleProps,\n  GetComponent,\n  ModuleStatus,\n  RawModule,\n  ModuleName,\n  ModuleGetter,\n  ESModule,\n  Strategy,\n} from './types';\nimport { error, logActivity } from './logger';\n\nclass Module {\n  private _name: string;\n  private _getModel?: Function;\n  private _getComponent: GetComponent;\n  private statusMap: Map<ModuleName, ModuleStatus>;\n  private resolversMap: Map<ModuleName, Array<Function>>;\n  private resolvedModulesMap: Map<ModuleName, Function | null>;\n  private _strategies: Array<Strategy>;\n\n  constructor(props: ModuleProps) {\n    const { name, getModel, getComponent, strategies } = props;\n    this._name = name;\n    this._getModel = getModel;\n    this._getComponent = getComponent;\n    this.statusMap = new Map<ModuleName, ModuleStatus>([\n      [ModuleName.Model, ModuleStatus.Idle],\n      [ModuleName.Component, ModuleStatus.Idle],\n    ]);\n    this.resolversMap = new Map<ModuleName, Array<Function>>([\n      [ModuleName.Model, [] as Array<Function>],\n      [ModuleName.Component, [] as Array<Function>],\n    ]);\n    this.resolvedModulesMap = new Map<ModuleName, Function | null>([\n      [ModuleName.Model, null],\n      [ModuleName.Component, null],\n    ]);\n    this._strategies = strategies || [];\n\n    logActivity('Module', {\n      message: `create ${name} Module`,\n    });\n  }\n\n  getName(): string {\n    return this._name;\n  }\n\n  getComponent(): GetComponent {\n    return this._getComponent;\n  }\n\n  getStrategies(): Array<Strategy> {\n    return this._strategies;\n  }\n\n  getModel(): Function | undefined {\n    return this._getModel;\n  }\n\n  resolveModule<T extends RawModule>(module: T): Function {\n    return module && (module as ESModule).__esModule\n      ? (module as ESModule).default\n      : (module as Function);\n  }\n\n  load(\n    moduleName: ModuleName,\n    getter: ModuleGetter\n  ): Promise<Function> | Function {\n    const currentStatus = this.statusMap.get(moduleName);\n    // If module has been loaded already, then return directly.\n    if (currentStatus === ModuleStatus.Loaded) {\n      logActivity('Module', {\n        message: `load module ${this._name} ${moduleName} from cache`,\n      });\n      return this.resolvedModulesMap.get(moduleName) as Function;\n    }\n\n    return new Promise(resolve => {\n      switch (currentStatus) {\n        case ModuleStatus.Idle:\n          this.resolversMap.get(moduleName)?.push(resolve);\n          logActivity('Module', {\n            message: `start load module ${this._name} ${moduleName}`,\n          });\n          this.statusMap.set(moduleName, ModuleStatus.Pending);\n          break;\n        case ModuleStatus.Pending:\n          this.resolversMap.get(moduleName)?.push(resolve);\n          return;\n      }\n\n      const fn = getter.call(this);\n\n      if (fn) {\n        // __webpack_require__ will not return a Promise, so it need to wrapped\n        // with Promise.resolve.\n        Promise.resolve(fn.call(this)).then(\n          rawModule => {\n            const module = this.resolveModule(rawModule as RawModule);\n            const resolvers = this.resolversMap.get(moduleName) || [];\n            resolvers.forEach(resolver => resolver(module));\n            this.resolvedModulesMap.set(moduleName, module);\n            logActivity('Module', {\n              message: `finish load module ${this._name} ${moduleName}`,\n            });\n            this.resolversMap.set(moduleName, []);\n            this.statusMap.set(moduleName, ModuleStatus.Loaded);\n          },\n          () => {\n            error({\n              type: 'module',\n              message: `'load' ${moduleName} fails`,\n            });\n          }\n        );\n      }\n    });\n  }\n\n  loadModel(): Promise<Function> | Function {\n    return this.load(ModuleName.Model, this.getModel);\n  }\n\n  loadComponent(): Promise<Function> | Function {\n    return this.load(ModuleName.Component, this.getComponent);\n  }\n}\n\nexport default Module;\n","const toString = Function.call.bind<Function>(Object.prototype.toString);\nexport const isFunction = (fn: any): boolean => typeof fn === 'function';\nexport const isString = (o: any) => toString(o) === '[object String]';\nexport const isPlainObject = (o: any) => toString(o) === '[object Object]';\nexport const isPromise = (o: any) =>\n  typeof o === 'object' && typeof o.then === 'function';\n\nexport const reflect = (p: Promise<any>) =>\n  p.then(\n    value => {\n      return { value, success: true };\n    },\n    value => {\n      return { value, success: false };\n    }\n  );\n\nexport const settledPromise = (ps: Array<Promise<any>>) =>\n  Promise.all(ps.map(p => reflect(p)));\n\nexport const canIUseProxy = () => {\n  try {\n    new Proxy({}, {}) // eslint-disable-line\n  } catch (err) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const createHiddenProperty = (\n  target: object,\n  prop: PropertyKey,\n  value: any\n) => {\n  Object.defineProperty(target, prop, {\n    value,\n    enumerable: false,\n    writable: true,\n  });\n};\n\nexport const hasSymbol = typeof Symbol !== 'undefined';\nexport const TRACKER: unique symbol = hasSymbol\n  ? Symbol('tracker')\n  : ('__tracker__' as any);\n\nexport const isTrackable = (o: any) => { // eslint-disable-line\n  return ['[object Object]', '[object Array]'].indexOf(toString(o)) !== -1;\n};\n","import React, {\n  FC,\n  useRef,\n  useState,\n  Fragment,\n  forwardRef,\n  useCallback,\n  createElement,\n  FunctionComponentElement,\n} from 'react';\nimport invariant from 'invariant';\nimport { BlockNodeProps, BlockWrapperProps, BlockNodeState } from './types';\nimport { logActivity } from './logger';\nimport { isPromise, settledPromise } from './commons';\n\nconst BlockWrapper: FC<BlockNodeProps> = props => {\n  const { hooks, block, moduleMap, loadManagerMap, blockRenderFn } = props;\n  const [wrapper, setWrapper] = useState<BlockNodeState>({});\n  const blockKey = block.getKey();\n  const moduleName = block.getName();\n  const blockRef = useRef();\n  const isLoadingRef = useRef(false);\n  const isMountedRef = useRef(false);\n  const loadManager = loadManagerMap.get(blockKey)!;\n\n  const unsubscribeLoadRoutine = useRef<Function | null>(null);\n\n  const loadRoutine = useCallback(() => {\n    const shouldLoadModule = loadManager?.shouldModuleLoad();\n    if (isPromise(shouldLoadModule)) {\n      (shouldLoadModule as Promise<boolean>).then(falsy => {\n        if (falsy) loadAndForceUpdate();\n      });\n    } else if (shouldLoadModule) {\n      loadAndForceUpdate();\n    }\n  }, []); // eslint-disable-line\n\n  const forceUpdate = useCallback(result => {\n    const [modelResult, componentResult] = result;\n    const state: BlockNodeState = {};\n    if (modelResult.success) {\n      state.model = modelResult.value;\n    }\n\n    if (componentResult.success) {\n      state.Component = componentResult.value;\n    }\n    setWrapper(state);\n  }, []) // eslint-disable-line\n\n  const loadAndForceUpdate = useCallback(() => {\n    logActivity('BlockNode', {\n      message: `Trigger 'loadAndForceUpdate'`,\n    });\n    if (unsubscribeLoadRoutine.current)\n      unsubscribeLoadRoutine.current?.call(null);\n    if (isLoadingRef.current) return;\n    const module = moduleMap.get(moduleName);\n    if (module) {\n      hooks.register.call(blockKey, block);\n      const model = module.loadModel();\n      const component = module.loadComponent();\n\n      if (isPromise(model) || isPromise(component)) {\n        const loadModelTask = Promise.resolve(module.loadModel());\n        const loadComponentTask = Promise.resolve(module.loadComponent());\n        settledPromise([loadModelTask, loadComponentTask]).then(result => {\n          forceUpdate(result);\n        });\n      } else {\n        logActivity('BlockNode', {\n          message: `load component & model directly..`,\n        });\n        forceUpdate([\n          {\n            success: true,\n            value: model,\n          },\n          {\n            success: true,\n            value: component,\n          },\n        ]);\n      }\n\n      // TODO: temp to wrapper with Promise\n    }\n  }, []); // eslint-disable-line\n\n  // 在最开始的时候，判断一下是否进行module的加载；\n  if (!isMountedRef.current) {\n    // In a condition, when invoke loadRoutine, model and module have already loaded.\n    // it will trigger forceUpdate directly. Because there is no limit on trigger forceUpdate.\n    // if `isMountedRef` is putted in `useEffect`, it will never be called and lost into\n    // render loop!!!\n    isMountedRef.current = true;\n    unsubscribeLoadRoutine.current = loadManager.bindLoadRoutine(loadRoutine);\n    loadRoutine();\n  }\n\n  const Helper = () => {\n    return null;\n  };\n\n  if (!wrapper.Component) return null;\n\n  let blockRenderer = null;\n\n  if (typeof blockRenderFn === 'function') {\n    blockRenderer = blockRenderFn(block.getRenderProps());\n  }\n\n  const RefForwardingWrapper = forwardRef<any, BlockWrapperProps>(\n    (props, ref) => {\n      return createElement(wrapper.Component as FC<any>, {\n        ...props,\n        $_modelKey: loadManager.getKey(),\n        forwardRef: ref,\n      });\n    }\n  );\n\n  if (blockRenderer) {\n    return (\n      <Fragment>\n        {createElement(\n          blockRenderer,\n          props,\n          <RefForwardingWrapper {...props} ref={blockRef} />\n        )}\n        <Helper />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <RefForwardingWrapper {...props} ref={blockRef} />\n      <Helper />\n    </Fragment>\n  );\n};\n\nconst BlockNode: FC<BlockNodeProps> = props => {\n  const { block, nodeMap, blockRenderFn, addBlockLoadManager, ...rest } = props;\n  const children: Array<FunctionComponentElement<BlockNodeProps>> = [];\n  const childKeys = block.getChildKeys();\n  const blockKey = block.getKey();\n  const moduleName = block.getName();\n  const moduleMap = props.moduleMap;\n  const module = moduleMap.get(moduleName)!;\n\n  invariant(\n    module,\n    `module ${moduleName} is required to register first. Please check whether ` +\n      `module ${moduleName} is defined in 'registers' props`\n  );\n\n  // block strategy comes first, then from module...\n  const strategies = block.getStrategies() || module.getStrategies() || [];\n  addBlockLoadManager({\n    blockKey,\n    moduleName,\n    strategies,\n  });\n\n  logActivity('BlockNode', {\n    message: 'render block node',\n    value: block,\n  });\n\n  childKeys.forEach(childKey => {\n    const node = nodeMap.get(childKey);\n    if (node) {\n      children.push(\n        createElement(\n          BlockNode,\n          {\n            key: childKey,\n            block: node,\n            nodeMap,\n            blockRenderFn,\n            addBlockLoadManager,\n            ...rest,\n          },\n          null\n        )\n      );\n    }\n  });\n\n  return createElement(BlockWrapper, props, children);\n};\n\nexport default BlockNode;\n","import {\n  Store,\n  Strategy,\n  ModuleMap,\n  StrategyType,\n  ProxyEvent,\n  DispatchEvent,\n  LockCurrentLoadManager,\n  ReleaseCurrentLoadManager,\n  LoadManagerConstructorProps,\n} from './types';\nimport { isFunction, isPromise } from './commons';\nimport { logActivity } from './logger';\n\n/**\n * loadManager需要在进行渲染之前就要处理一直，这样在`BlockNode`渲染的时候，可以直接对那些不需要判断的\n * 组件直接进行加载；\n */\nclass LoadManager {\n  private _key: string;\n  readonly _store: Store;\n  readonly strategies: Array<Strategy>;\n  readonly _moduleName: string;\n  readonly _moduleMap: ModuleMap;\n  readonly _lockCurrentLoadManager: LockCurrentLoadManager;\n  readonly _releaseCurrentLoadManager: ReleaseCurrentLoadManager;\n  readonly _proxyEvent: ProxyEvent;\n  private _dispatchEvent: DispatchEvent;\n  private teardownEffects: Array<Function>;\n  private _runtimeVerifyEffect: null | Function;\n  private _loadRoutine: Function | null;\n\n  constructor(props: LoadManagerConstructorProps) {\n    const {\n      store,\n      blockKey,\n      moduleName,\n      strategies,\n      moduleMap,\n      proxyEvent,\n      dispatchEvent,\n      lockCurrentLoadManager,\n      releaseCurrentLoadManager,\n    } = props;\n\n    this._key = blockKey;\n    this._store = store;\n    this.strategies = this.sort(strategies);\n    this._moduleName = moduleName;\n    this._moduleMap = moduleMap;\n    this._lockCurrentLoadManager = lockCurrentLoadManager;\n    this._releaseCurrentLoadManager = releaseCurrentLoadManager;\n    this._proxyEvent = proxyEvent;\n    this._dispatchEvent = dispatchEvent;\n    this.teardownEffects = [];\n    this._runtimeVerifyEffect = null;\n    this._loadRoutine = null;\n  }\n\n  getKey() {\n    return this._key;\n  }\n\n  addTeardown(fn: Function) {\n    this.teardownEffects.push(fn);\n  }\n\n  teardown() {\n    this.teardownEffects.forEach(fn => fn());\n  }\n\n  /**\n   *\n   * @param strategies\n   * 按照'flags', 'event', 'runtime'的顺序进行排序；因为只有在'flags'和'event'\n   * 层级都加载完毕其实'runtime'层面才需要开始加载（这个时候其实单独触发的model的加载）；\n   * 之所以，将flags单独放出来，因为假如说flags都没有过的话，其实runtime的model都\n   * 不需要进行加载的；\n   */\n  sort(strategies: Array<Strategy>): Array<Strategy> {\n    const typeMap = {\n      flags: 0,\n      event: 1,\n      runtime: 2,\n    };\n    return strategies.sort((a, b) => {\n      return typeMap[a.type] - typeMap[b.type];\n    });\n  }\n\n  update() {\n    this.teardown();\n    if (this._loadRoutine) this._loadRoutine();\n  }\n\n  mountModel(\n    resolver: Function,\n    modelInstance: any,\n    initialValue: any = {}\n  ): boolean {\n    const modelKey = this._key;\n    this._store.injectModel(modelKey, modelInstance, initialValue);\n    const base = this._store.getState();\n\n    // TODO: If injected model is pending with effects. base[modelKey]\n    // may get old value...\n    const currentModelState = base[modelKey];\n    const falsy = resolver(currentModelState);\n\n    if (!falsy) {\n      this._store.subscribe(this.update.bind(this));\n    }\n\n    return !!falsy;\n  }\n\n  startVerifyRuntime(resolver: Function): Promise<boolean> | boolean {\n    if (typeof this._runtimeVerifyEffect === 'function') {\n      this._runtimeVerifyEffect();\n      this._runtimeVerifyEffect = null;\n    }\n\n    logActivity('LoadManager', {\n      message: 'start verify runtime strategy',\n    });\n\n    const modelCreator = this._moduleMap.get(this._moduleName)?.loadModel();\n    let modelInstance = null;\n    if (isPromise(modelCreator)) {\n      return (modelCreator as Promise<Function>)\n        .then(m => {\n          const modelInstance = m.call(null);\n          return this.mountModel(resolver, modelInstance, {});\n        })\n        .catch(err => {\n          logActivity('LoadManager', {\n            message: `Has error on verify runtime..${err}`,\n          });\n          return false;\n        });\n    } else if (isFunction(modelCreator)) {\n      modelInstance = (modelCreator as Function).call(null);\n      return this.mountModel(resolver, modelInstance, {});\n    }\n\n    return false;\n  }\n\n  /**\n   * 整个strategy的处理需要是一个同步的\n   */\n  shouldModuleLoad(): boolean | Promise<boolean> {\n    const len = this.strategies.length;\n    this._lockCurrentLoadManager(this);\n    // debugger\n\n    for (let i = 0; i < len; i++) {\n      const strategy = this.strategies[i];\n      const { type, resolver } = strategy;\n      let value: boolean = false;\n\n      switch (type) {\n        case StrategyType.event:\n          value = !!resolver({\n            event: this._proxyEvent,\n            dispatchEvent: this._dispatchEvent,\n          });\n          break;\n        // 如果说是runtime的话，首先需要先加载model；运行一次resolver将需要\n        // 监听的属性进行绑定。\n        case StrategyType.runtime:\n          return this.startVerifyRuntime(resolver);\n      }\n      // TODO: 临时注释掉\n      if (!value) {\n        // should release current load manager before return\n        this._releaseCurrentLoadManager();\n        return false;\n      }\n    }\n    this._releaseCurrentLoadManager();\n\n    return true;\n  }\n\n  bindLoadRoutine(loadRoutine: Function): Function {\n    this._loadRoutine = loadRoutine;\n    return () => (this._loadRoutine = null);\n  }\n}\n\nexport default LoadManager;\n","import { createHiddenProperty, isTrackable, TRACKER } from './commons';\nimport { TrackerConstructor, TrackerConstructorProps } from './types';\n\nconst Tracker = (function({\n  base,\n  path = [],\n  reportAccessPaths,\n}: TrackerConstructorProps) {\n  let tracker = base;\n\n  if (isTrackable(base)) {\n    // base should be destructed, or will be the same object.\n    tracker = new Proxy(\n      { ...base },\n      {\n        get: (target, prop, receiver) => {\n          if (prop === TRACKER) return Reflect.get(target, prop, receiver);\n          // Take note: Reflect.get will not trigger `get` handler\n          const tracker = Reflect.get(target, TRACKER, receiver);\n          const base = tracker.base;\n          // if key is 'base', should not report and return directly.\n          if (prop === 'base') return base;\n          const value = base[prop];\n          const childrenProxies = tracker['childrenProxies'];\n          const nextPath = path.concat(prop as string);\n\n          reportAccessPaths(nextPath);\n\n          if (isTrackable(value)) {\n            if (!childrenProxies[prop]) {\n              childrenProxies[prop] = new Tracker({\n                base: value,\n                path: nextPath,\n                reportAccessPaths,\n              });\n            } else if (childrenProxies[prop].base !== value) {\n              childrenProxies[prop] = new Tracker({\n                base: value,\n                path: nextPath,\n                reportAccessPaths,\n              });\n            }\n            return childrenProxies[prop];\n          } else if (childrenProxies[prop]) {\n            delete childrenProxies[prop];\n          }\n\n          return value;\n        },\n        set: (target, prop, newValue, receiver) => {\n          return Reflect.set(target, prop, newValue, receiver);\n        },\n      }\n    );\n\n    createHiddenProperty(tracker, TRACKER, {\n      base,\n      childrenProxies: {},\n      effects: [],\n      paths: [],\n    });\n  }\n\n  return tracker;\n} as any) as TrackerConstructor;\n\nexport default Tracker;\n","const joinPath = (path: Array<string>) => path.join('_');\n\ninterface AccessMap {\n  [key: string]: number;\n}\n\nexport const generateRemarkablePaths = (paths: Array<Array<string>>) => {\n  const copy = paths.slice();\n  const accessMap: AccessMap = {};\n  const len = copy.length;\n  const remarkablePaths = [];\n\n  for (let i = len - 1; i >= 0; i--) {\n    const path = copy[i].slice();\n    const pathLength = path.length;\n\n    let isConsecutive = false;\n\n    for (let i = 0; i < pathLength; i++) {\n      const joinedPath = joinPath(path);\n      const count = accessMap[joinedPath] || 0;\n\n      // the intermediate accessed path will be ignored.\n      // https://stackoverflow.com/questions/2937120/how-to-get-javascript-object-references-or-reference-count\n      // because of this, intermediate value may be ignored...\n      if (isConsecutive) {\n        accessMap[joinedPath] = count + 1;\n        path.pop();\n        continue // eslint-disable-line\n      }\n\n      if (!count) {\n        const p = path.slice();\n        const str = joinPath(p);\n        const found = remarkablePaths.find(path => joinPath(path) === str);\n        if (!found) remarkablePaths.push(p);\n        isConsecutive = true;\n        path.pop();\n      } else {\n        accessMap[joinedPath] = count - 1;\n        break;\n      }\n    }\n  }\n\n  return remarkablePaths;\n};\n","import LoadManager from 'LoadManager';\nimport {\n  EffectNodeChildMap,\n  EffectNodeEffectMap,\n  AddChildrenProps,\n} from './types';\n\nclass EffectNode {\n  public childMap: EffectNodeChildMap;\n  public effectMap: EffectNodeEffectMap;\n  private _key: string;\n  readonly _slugKey: string;\n\n  constructor({ key }: { key: string }) {\n    this.childMap = {};\n    this.effectMap = {};\n    this._key = key;\n    this._slugKey = '';\n  }\n\n  getKey() {\n    return this._key;\n  }\n\n  addChild(path: Array<string>, loadManager: LoadManager) {\n    const node = path.reduce<EffectNode>((node, point) => {\n      if (!node.childMap[point])\n        node.childMap[point] = new EffectNode({\n          key: point,\n        });\n      return node.childMap[point];\n    }, this);\n\n    node.addEffect(loadManager);\n  }\n\n  addEffect(loadManager: LoadManager) {\n    const key = loadManager.getKey();\n    this.effectMap[key] = {\n      loadManager,\n    };\n    loadManager.addTeardown(() => delete this.effectMap[key]);\n  }\n\n  addChildren({ paths, loadManager }: AddChildrenProps) {\n    paths.forEach(path => {\n      this.addChild(path, loadManager);\n    });\n  }\n\n  triggerEffect(path: Array<string>) {\n    const node = path.reduce<EffectNode>((node, cur) => {\n      if (node && node.childMap && node.childMap[cur]) {\n        return node.childMap[cur];\n      }\n      return node;\n    }, this);\n\n    for (let key in node.effectMap) {\n      const { loadManager } = node.effectMap[key];\n      loadManager.update();\n    }\n  }\n}\n\nexport default EffectNode;\n","import { EventValue, HalationEvents, ProxyEvent } from './types';\nimport LoadManager from './LoadManager';\nimport Tracker from './Tracker';\nimport { generateRemarkablePaths } from './path';\nimport EffectNode from './EffectNode';\nimport { logActivity } from './logger';\n\nclass EventTracker {\n  public events: HalationEvents;\n  private eventObject: ProxyEvent;\n  private _proxyEvent: ProxyEvent;\n  private currentLoadManager: LoadManager | null;\n  private accessPaths: Array<Array<string>>;\n  private effectNodeTree: EffectNode;\n\n  constructor(props: { events: HalationEvents }) {\n    const { events } = props;\n    this.events = events;\n    this.eventObject = this.initEventObject();\n    this._proxyEvent = new Tracker({\n      path: [],\n      base: this.eventObject,\n      reportAccessPaths: this.reportAccessPaths.bind(this),\n    });\n\n    this.accessPaths = [];\n    this.effectNodeTree = new EffectNode({\n      key: 'root',\n    });\n\n    this.currentLoadManager = null;\n  }\n\n  /**\n   *\n   * @param eventValue\n   * 目前先做到第一层的比较\n   */\n  updateEventValue(eventValue: EventValue) {\n    const { event, value } = eventValue;\n    const baseEventValue = this._proxyEvent[event];\n\n    if (baseEventValue !== value) {\n      this._proxyEvent[event] = value;\n      // base value should be loaded as well\n      this._proxyEvent.base[event] = value;\n      this.effectNodeTree.triggerEffect([event]);\n    }\n  }\n\n  getProxyEvent() {\n    return this._proxyEvent;\n  }\n\n  reportAccessPaths(paths: Array<string>) {\n    this.accessPaths.push(paths);\n  }\n\n  initEventObject(): {} {\n    return this.events.reduce((acc, cur) => {\n      return { ...acc, [cur]: {} };\n    }, {});\n  }\n\n  setLoadManager(loadManager: LoadManager) {\n    this.accessPaths = [];\n    this.currentLoadManager = loadManager;\n  }\n\n  releaseLoadManager() {\n    const tipPoints = generateRemarkablePaths(this.accessPaths);\n    if (this.currentLoadManager) {\n      this.effectNodeTree.addChildren({\n        paths: tipPoints,\n        loadManager: this.currentLoadManager,\n      });\n    }\n\n    logActivity('EventTracker', {\n      message: `add effects to loadManager ${this.currentLoadManager?.getKey()}`,\n    });\n\n    this.currentLoadManager = null;\n  }\n\n  addEffect() {}\n}\n\nexport default EventTracker;\n","import React, {\n  FC,\n  Fragment,\n  createElement,\n  PureComponent,\n  FunctionComponentElement,\n} from 'react';\nimport { SyncHook } from 'tapable';\nimport {\n  Refs,\n  Hooks,\n  Store,\n  PropsAPI,\n  Strategy,\n  ModuleMap,\n  HalationProps,\n  BlockRenderFn,\n  BlockNodeProps,\n  RegisterResult,\n  LoadManagerMap,\n  EventValue,\n} from './types';\nimport Node from './Node';\nimport Module from './Module';\nimport { logActivity } from './logger';\nimport BlockNode from './BlockNode';\nimport LoadManager from './LoadManager';\nimport EventTracker from './EventTracker';\nimport { isPlainObject, isString } from './commons';\n\nclass Halation extends PureComponent<HalationProps> {\n  public name: string;\n  public nodeMap: Map<string, Node>;\n  public blockRenderFn?: BlockRenderFn;\n  public halationState: Array<any>;\n  public moduleMap: ModuleMap;\n  public loadManagerMap: LoadManagerMap;\n  private rootRenderFn?: FC<PropsAPI>;\n  public hooks: Hooks;\n  public runtimeRegisterModule: Map<string, any>;\n  private _refs: Refs;\n  public eventTracker: EventTracker;\n  public store: Store;\n\n  constructor(props: HalationProps) {\n    super(props);\n    const {\n      name,\n      store,\n      events,\n      registers,\n      blockRenderFn,\n      halationState,\n      rootRenderFn,\n    } = props;\n    this.halationState = halationState;\n    this.blockRenderFn = blockRenderFn;\n    this.nodeMap = new Map();\n    this.name = name;\n    this.moduleMap = new Map();\n    this.loadManagerMap = new Map();\n    this.rootRenderFn = rootRenderFn;\n    this.hooks = {\n      register: new SyncHook(['block']),\n    };\n    this._refs = {};\n\n    this.runtimeRegisterModule = new Map();\n\n    this.eventTracker = new EventTracker({\n      events: events || [],\n    });\n\n    this.createBlockNode(this.halationState);\n    this.startListen();\n    this.store = store;\n\n    registers.forEach(register => {\n      const moduleProps: RegisterResult = register.call(null);\n      const { name, getModel, getComponent, strategies } = moduleProps;\n      if (!this.moduleMap.get(name)) {\n        const module = new Module({\n          name,\n          getComponent,\n          getModel,\n          strategies: strategies || [],\n        });\n        this.moduleMap.set(name, module);\n      }\n    });\n  }\n\n  startListen() {\n    for (let key in this.hooks) {\n      const hook = this.hooks[key as keyof Hooks];\n      hook.tap(key, function() {});\n\n      hook.intercept({\n        register: tabInfo => {\n          logActivity('Halation', {\n            message: 'register info',\n            value: tabInfo,\n          });\n          return tabInfo;\n        },\n      });\n    }\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  createBlockNode(list: Array<any>) {\n    list.forEach(item => {\n      const { key } = item;\n      this.nodeMap.set(key, new Node(item));\n    });\n\n    logActivity('Halation', {\n      message: 'finish to create nodes ',\n      value: this.nodeMap,\n    });\n  }\n\n  public getRefs(): Refs {\n    return this._refs;\n  }\n\n  public getPropsAPI(): PropsAPI {\n    return {\n      hooks: this.hooks,\n      nodeMap: this.nodeMap,\n      moduleMap: this.moduleMap,\n      loadManagerMap: this.loadManagerMap,\n      refs: this.getRefs(),\n      addBlockLoadManager: this.addBlockLoadManager.bind(this),\n    };\n  }\n\n  public addBlockLoadManager({\n    blockKey,\n    moduleName,\n    strategies,\n  }: {\n    blockKey: string;\n    moduleName: string;\n    strategies: Array<Strategy>;\n  }): boolean {\n    if (this.loadManagerMap.get(blockKey)) {\n      logActivity('Halation', {\n        message: `Duplicated module key ${blockKey} is registered in halation application`,\n      });\n      return false;\n    }\n\n    this.loadManagerMap.set(\n      blockKey,\n      new LoadManager({\n        store: this.store,\n        blockKey,\n        strategies,\n        moduleName,\n        moduleMap: this.moduleMap,\n        dispatchEvent: this.dispatchEvent.bind(this),\n        proxyEvent: this.eventTracker.getProxyEvent(),\n        lockCurrentLoadManager: this.lockCurrentLoadManager.bind(this),\n        releaseCurrentLoadManager: this.releaseCurrentLoadManager.bind(this),\n      })\n    );\n\n    return true;\n  }\n\n  lockCurrentLoadManager(loadManager: LoadManager) {\n    this.eventTracker.setLoadManager(loadManager);\n  }\n\n  releaseCurrentLoadManager() {\n    this.eventTracker.releaseLoadManager();\n  }\n\n  dispatchEvent(event: string | object) {\n    let nextValue = event;\n\n    if (isString(event)) {\n      nextValue = {\n        event,\n        value: true,\n      };\n    }\n\n    if (isPlainObject(nextValue)) {\n      this.eventTracker.updateEventValue(nextValue as EventValue);\n    }\n  }\n\n  render() {\n    const blocks = this.nodeMap.values();\n    let block = blocks.next().value;\n    const children: Array<FunctionComponentElement<BlockNodeProps>> = [];\n\n    while (block) {\n      children.push(\n        createElement<BlockNodeProps>(\n          BlockNode,\n          {\n            block,\n            key: block.getKey(),\n            blockRenderFn: this.blockRenderFn,\n            ...this.getPropsAPI(),\n          },\n          null\n        )\n      );\n      const blockKey = block.getNextSibling();\n      block = this.nodeMap.get(blockKey);\n    }\n\n    if (typeof this.rootRenderFn === 'function') {\n      return React.createElement(\n        this.rootRenderFn,\n        {\n          ...this.getPropsAPI(),\n        },\n        children\n      );\n    }\n\n    return React.createElement(Fragment, {}, children);\n  }\n}\n\nexport default Halation;\n"],"names":["Node","props","key","type","prevSibling","nextSibling","children","name","strategies","getChildKeys","getNextSibling","getPrevSibling","getName","getKey","getType","getStrategies","getRenderProps","ModuleName","ModuleStatus","StrategyType","error","message","console","logActivity","moduleName","value","title","titleStyle","messageStyle","process","env","NODE_ENV","log","apply","Date","now","Module","getModel","getComponent","_name","_getModel","_getComponent","statusMap","Map","Model","Idle","Component","resolversMap","resolvedModulesMap","_strategies","resolveModule","module","__esModule","load","getter","currentStatus","get","Loaded","Promise","resolve","push","set","Pending","fn","call","then","rawModule","resolvers","forEach","resolver","loadModel","loadComponent","toString","Function","bind","Object","prototype","isFunction","isString","o","isPlainObject","isPromise","reflect","p","success","settledPromise","ps","all","map","createHiddenProperty","target","prop","defineProperty","enumerable","writable","hasSymbol","Symbol","TRACKER","isTrackable","indexOf","BlockWrapper","hooks","block","moduleMap","loadManagerMap","blockRenderFn","useState","wrapper","setWrapper","blockKey","blockRef","useRef","isLoadingRef","isMountedRef","loadManager","unsubscribeLoadRoutine","loadRoutine","useCallback","shouldLoadModule","shouldModuleLoad","falsy","loadAndForceUpdate","forceUpdate","result","modelResult","componentResult","state","model","current","register","component","loadModelTask","loadComponentTask","bindLoadRoutine","Helper","blockRenderer","RefForwardingWrapper","forwardRef","ref","createElement","$_modelKey","React","Fragment","BlockNode","nodeMap","addBlockLoadManager","rest","childKeys","invariant","childKey","node","LoadManager","store","proxyEvent","dispatchEvent","lockCurrentLoadManager","releaseCurrentLoadManager","_key","_store","sort","_moduleName","_moduleMap","_lockCurrentLoadManager","_releaseCurrentLoadManager","_proxyEvent","_dispatchEvent","teardownEffects","_runtimeVerifyEffect","_loadRoutine","addTeardown","teardown","typeMap","flags","event","runtime","a","b","update","mountModel","modelInstance","initialValue","modelKey","injectModel","base","getState","currentModelState","subscribe","startVerifyRuntime","modelCreator","m","err","len","length","i","strategy","Tracker","path","reportAccessPaths","tracker","Proxy","receiver","Reflect","childrenProxies","nextPath","concat","newValue","effects","paths","joinPath","join","generateRemarkablePaths","copy","slice","accessMap","remarkablePaths","pathLength","isConsecutive","joinedPath","count","pop","str","found","find","EffectNode","childMap","effectMap","_slugKey","addChild","reduce","point","addEffect","addChildren","triggerEffect","cur","EventTracker","events","eventObject","initEventObject","accessPaths","effectNodeTree","currentLoadManager","updateEventValue","eventValue","baseEventValue","getProxyEvent","acc","setLoadManager","releaseLoadManager","tipPoints","Halation","registers","halationState","rootRenderFn","SyncHook","_refs","runtimeRegisterModule","eventTracker","createBlockNode","startListen","moduleProps","hook","tap","intercept","tabInfo","list","item","getRefs","getPropsAPI","refs","nextValue","render","blocks","values","next","PureComponent"],"mappings":"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"}